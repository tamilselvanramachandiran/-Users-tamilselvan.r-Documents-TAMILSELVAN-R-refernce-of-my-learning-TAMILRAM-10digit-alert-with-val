
import SwiftUI

struct SwiftUIView: View {
    @State private var isNight = false
    var body: some View {
        ZStack{
            Backgroundview (isNight: $isNight)
            VStack{
                citytextview(cityname: "INDIA,TN")
                VStack(spacing :10){
                    Mainweatherview(imagename: isNight ? "moon.stars.circle.fill"  : "cloud.sun.rain", temperature: 26)
                    
                    HStack(spacing :25){
                        WeatherDayView(dayofweek:"Tue", imagename: "cloud.sun.rain", temperature: 23)
                        WeatherDayView(dayofweek:"23", imagename: "cloud.hail.circle.fill", temperature: 21)
                        WeatherDayView(dayofweek:"Thu", imagename: "sun.max", temperature: 30)
                        WeatherDayView(dayofweek:"Fri", imagename: "cloud.bolt.circle", temperature: 21)
                        WeatherDayView(dayofweek:"Sat", imagename: "sunset.fill", temperature: 45)
                    }
                    Spacer()
                    Button{
                        isNight.toggle()
                        
                    }label:{
                        weatherbutton(title:"Change Day Time", backgroundcolor:.blue, textcolor: .white)
                        
                    }
                    Spacer()
                }
            
        }
    }
}

struct SwiftUIView_Previews: PreviewProvider {
    static var previews: some View {
        SwiftUIView()
    }
}

//create struct weatherdayview
struct WeatherDayView: View {
    var dayofweek :String
    var imagename :String
    var temperature :Int
    
    var body: some View {
        VStack{
            Text("\(dayofweek)")
                .font(.system(size: 18,weight: .medium))
                .foregroundColor(.white)
            Image(systemName: "\(imagename)")
                .renderingMode(.original)
                .resizable()
                .aspectRatio(contentMode: .fit)
                .frame(width: 40,height: 40)
            Text("\(temperature)")
                .font(.system(size: 30,weight: .medium))
                .foregroundColor(.white)
        }
    }
}
struct Backgroundview: View {
    @Binding var isNight : Bool
    
    var body: some View {
        
        LinearGradient(gradient:Gradient(colors:[isNight ? .black :.blue, isNight ? .gray : .white]), startPoint: .topLeading, endPoint: .bottomTrailing)
            .edgesIgnoringSafeArea(.all)
        
       
        }
    }
}

struct citytextview: View {
    
    var cityname: String
    
    var body: some View {
        Text(cityname)
            .font(.system(size: 32,weight:.medium,design:.default))
            .foregroundColor(.white)
            .frame(width: 180,height: 180)
            .padding()
    }
}
struct Mainweatherview :View{
    
    var imagename :String
    var temperature:Int
    
    var body: some View{
        VStack(spacing :10){
            Image(systemName: imagename)
                .renderingMode(.original)
                .resizable()
                .aspectRatio(contentMode: .fit)
                .frame(width: 100,height: 100)
            Text("\(temperature)")
                .font(.system(size: 70,weight: .medium))
                .foregroundColor(.white)
                .padding(.bottom,40)
            
        }
    }
}

